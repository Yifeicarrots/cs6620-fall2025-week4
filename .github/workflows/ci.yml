name: Python CI with Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit with error on any linting issues
        flake8 . --count --max-line-length=127 --statistics
    
    - name: Lint with pylint
      run: |
        pylint app.py --fail-under=8.0

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: lint  # Run after lint job completes successfully
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to EC2 via SSM
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --parameters 'commands=[
              "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest || true",
              "docker stop calculator-app || true",
              "docker rm calculator-app || true",
              "docker run -d --name calculator-app --restart unless-stopped -p 80:5000 ${{ secrets.DOCKERHUB_USERNAME }}/calculator-app:latest"
            ]' \
            --comment "Deploying calculator app from GitHub Actions"
